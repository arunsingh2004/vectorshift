{"ast":null,"code":"var _jsxFileName = \"D:\\\\vectorshift\\\\integrations_technical_assessment\\\\frontend\\\\src\\\\integrations\\\\hubspot.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Box, Button, CircularProgress } from \"@mui/material\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const HubSpotIntegration = ({\n  user,\n  org,\n  integrationParams,\n  setIntegrationParams\n}) => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n\n  // To connect hubspot with authO, a request is sent to backend. In response we get a URL for hubspot authorization.\n  const handleConnectClick = async () => {\n    try {\n      setIsConnecting(true);\n      const formData = new FormData();\n      formData.append(\"user_id\", user);\n      formData.append(\"org_id\", org);\n      const response = await axios.post(`http://localhost:8000/integrations/hubspot/authorize`, formData);\n      const authURL = response === null || response === void 0 ? void 0 : response.data;\n      const newWindow = window.open(authURL, \"HubSpot Authorization\", \"width=600, height=600\");\n      const pollTimer = window.setInterval(() => {\n        if ((newWindow === null || newWindow === void 0 ? void 0 : newWindow.closed) !== false) {\n          window.clearInterval(pollTimer);\n          handleWindowClosed();\n        }\n      }, 200);\n    } catch (e) {\n      var _e$response, _e$response$data;\n      setIsConnecting(false);\n      alert(e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.detail);\n    }\n  };\n\n  // When the hubspot is authorized, we fetch credentials from the backend.\n  const handleWindowClosed = async () => {\n    try {\n      const formData = new FormData();\n      formData.append(\"user_id\", user);\n      formData.append(\"org_id\", org);\n      const response = await axios.post(`http://localhost:8000/integrations/hubspot/credentials`, formData);\n      const credentials = response.data;\n      if (credentials) {\n        setIsConnecting(false);\n        setIsConnected(true);\n        setIntegrationParams(prev => ({\n          ...prev,\n          credentials: credentials,\n          type: \"HubSpot\"\n        }));\n      }\n      setIsConnecting(false);\n    } catch (e) {\n      var _e$response2, _e$response2$data;\n      setIsConnecting(false);\n      alert(e === null || e === void 0 ? void 0 : (_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.detail);\n    }\n  };\n  useEffect(() => {\n    setIsConnected(integrationParams !== null && integrationParams !== void 0 && integrationParams.credentials ? true : false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2\n      },\n      children: [\"Parameters\", /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        sx: {\n          mt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: isConnected ? () => {} : handleConnectClick,\n          color: isConnected ? \"success\" : \"primary\",\n          disabled: isConnecting,\n          style: {\n            pointerEvents: isConnected ? \"none\" : \"auto\",\n            cursor: isConnected ? \"default\" : \"pointer\",\n            opacity: isConnected ? 1 : undefined\n          },\n          children: isConnected ? \"HubSpot Connected\" : isConnecting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this) : \"Connect to HubSpot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(HubSpotIntegration, \"YVzh0k4rAm9dKRmEfKk5oscD40o=\");\n_c = HubSpotIntegration;\nvar _c;\n$RefreshReg$(_c, \"HubSpotIntegration\");","map":{"version":3,"names":["useState","useEffect","Box","Button","CircularProgress","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","HubSpotIntegration","user","org","integrationParams","setIntegrationParams","_s","isConnected","setIsConnected","isConnecting","setIsConnecting","handleConnectClick","formData","FormData","append","response","post","authURL","data","newWindow","window","open","pollTimer","setInterval","closed","clearInterval","handleWindowClosed","e","_e$response","_e$response$data","alert","detail","credentials","prev","type","_e$response2","_e$response2$data","children","sx","mt","display","alignItems","justifyContent","variant","onClick","color","disabled","style","pointerEvents","cursor","opacity","undefined","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/vectorshift/integrations_technical_assessment/frontend/src/integrations/hubspot.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Box, Button, CircularProgress } from \"@mui/material\";\r\nimport axios from \"axios\";\r\n\r\nexport const HubSpotIntegration = ({\r\n  user,\r\n  org,\r\n  integrationParams,\r\n  setIntegrationParams,\r\n}) => {\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [isConnecting, setIsConnecting] = useState(false);\r\n\r\n  // To connect hubspot with authO, a request is sent to backend. In response we get a URL for hubspot authorization.\r\n  const handleConnectClick = async () => {\r\n    try {\r\n      setIsConnecting(true);\r\n      const formData = new FormData();\r\n      formData.append(\"user_id\", user);\r\n      formData.append(\"org_id\", org);\r\n      const response = await axios.post(\r\n        `http://localhost:8000/integrations/hubspot/authorize`,\r\n        formData\r\n      );\r\n      const authURL = response?.data;\r\n      const newWindow = window.open(\r\n        authURL,\r\n        \"HubSpot Authorization\",\r\n        \"width=600, height=600\"\r\n      );\r\n      const pollTimer = window.setInterval(() => {\r\n        if (newWindow?.closed !== false) {\r\n          window.clearInterval(pollTimer);\r\n          handleWindowClosed();\r\n        }\r\n      }, 200);\r\n    } catch (e) {\r\n      setIsConnecting(false);\r\n      alert(e?.response?.data?.detail);\r\n    }\r\n  };\r\n\r\n  // When the hubspot is authorized, we fetch credentials from the backend.\r\n  const handleWindowClosed = async () => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"user_id\", user);\r\n      formData.append(\"org_id\", org);\r\n      const response = await axios.post(\r\n        `http://localhost:8000/integrations/hubspot/credentials`,\r\n        formData\r\n      );\r\n      const credentials = response.data;\r\n      if (credentials) {\r\n        setIsConnecting(false);\r\n        setIsConnected(true);\r\n        setIntegrationParams((prev) => ({\r\n          ...prev,\r\n          credentials: credentials,\r\n          type: \"HubSpot\",\r\n        }));\r\n      }\r\n      setIsConnecting(false);\r\n    } catch (e) {\r\n      setIsConnecting(false);\r\n      alert(e?.response?.data?.detail);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsConnected(integrationParams?.credentials ? true : false);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {/* Code to display the connection buttons */}\r\n      <Box sx={{ mt: 2 }}>\r\n        Parameters\r\n        <Box\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          sx={{ mt: 2 }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={isConnected ? () => {} : handleConnectClick}\r\n            color={isConnected ? \"success\" : \"primary\"}\r\n            disabled={isConnecting}\r\n            style={{\r\n              pointerEvents: isConnected ? \"none\" : \"auto\",\r\n              cursor: isConnected ? \"default\" : \"pointer\",\r\n              opacity: isConnected ? 1 : undefined,\r\n            }}\r\n          >\r\n            {isConnected ? (\r\n              \"HubSpot Connected\"\r\n            ) : isConnecting ? (\r\n              <CircularProgress size={20} />\r\n            ) : (\r\n              \"Connect to HubSpot\"\r\n            )}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}